/* automatically generated by rust-bindgen 0.71.1 */

pub const __bool_true_false_are_defined: u32 = 1;
pub const true_: u32 = 1;
pub const false_: u32 = 0;
pub const CommandType_COMMAND_INIT: CommandType = 0;
pub const CommandType_COMMAND_STATUS: CommandType = 1;
pub type CommandType = ::std::os::raw::c_uint;
#[repr(C)]
#[repr(align(1))]
#[derive(Copy, Clone)]
pub struct CommandData {
    pub bindgen_union_field: [u8; 0usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of CommandData"][::std::mem::size_of::<CommandData>() - 0usize];
    ["Alignment of CommandData"][::std::mem::align_of::<CommandData>() - 1usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Command {
    pub type_: CommandType,
    pub data: CommandData,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of Command"][::std::mem::size_of::<Command>() - 4usize];
    ["Alignment of Command"][::std::mem::align_of::<Command>() - 4usize];
    ["Offset of field: Command::type_"][::std::mem::offset_of!(Command, type_) - 0usize];
    ["Offset of field: Command::data"][::std::mem::offset_of!(Command, data) - 4usize];
};
pub const StatusCode_STATUS_OK: StatusCode = 0;
pub const StatusCode_STATUS_UNINIT: StatusCode = 1;
pub const StatusCode_STATUS_ERROR: StatusCode = 2;
pub type StatusCode = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Status {
    pub statusCode: StatusCode,
    pub message: *const ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of Status"][::std::mem::size_of::<Status>() - 16usize];
    ["Alignment of Status"][::std::mem::align_of::<Status>() - 8usize];
    ["Offset of field: Status::statusCode"][::std::mem::offset_of!(Status, statusCode) - 0usize];
    ["Offset of field: Status::message"][::std::mem::offset_of!(Status, message) - 8usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union ResponseData {
    pub status: Status,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ResponseData"][::std::mem::size_of::<ResponseData>() - 16usize];
    ["Alignment of ResponseData"][::std::mem::align_of::<ResponseData>() - 8usize];
    ["Offset of field: ResponseData::status"]
        [::std::mem::offset_of!(ResponseData, status) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Response {
    pub type_: CommandType,
    pub data: ResponseData,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of Response"][::std::mem::size_of::<Response>() - 24usize];
    ["Alignment of Response"][::std::mem::align_of::<Response>() - 8usize];
    ["Offset of field: Response::type_"][::std::mem::offset_of!(Response, type_) - 0usize];
    ["Offset of field: Response::data"][::std::mem::offset_of!(Response, data) - 8usize];
};
pub const ResponseErrorType_RESPONSE_ERROR_UNINIT: ResponseErrorType = 0;
pub const ResponseErrorType_RESPONSE_ERROR_UNIMPLEMENTED: ResponseErrorType = 1;
pub type ResponseErrorType = ::std::os::raw::c_uint;
#[repr(C)]
#[repr(align(1))]
#[derive(Copy, Clone)]
pub struct ResponseErrorData {
    pub bindgen_union_field: [u8; 0usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ResponseErrorData"][::std::mem::size_of::<ResponseErrorData>() - 0usize];
    ["Alignment of ResponseErrorData"][::std::mem::align_of::<ResponseErrorData>() - 1usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct ResponseError {
    pub type_: ResponseErrorType,
    pub data: ResponseErrorData,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ResponseError"][::std::mem::size_of::<ResponseError>() - 4usize];
    ["Alignment of ResponseError"][::std::mem::align_of::<ResponseError>() - 4usize];
    ["Offset of field: ResponseError::type_"]
        [::std::mem::offset_of!(ResponseError, type_) - 0usize];
    ["Offset of field: ResponseError::data"][::std::mem::offset_of!(ResponseError, data) - 4usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct ResponseResult {
    pub isError: bool,
    pub __bindgen_anon_1: ResponseResult__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union ResponseResult__bindgen_ty_1 {
    pub response: Response,
    pub error: ResponseError,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ResponseResult__bindgen_ty_1"]
        [::std::mem::size_of::<ResponseResult__bindgen_ty_1>() - 24usize];
    ["Alignment of ResponseResult__bindgen_ty_1"]
        [::std::mem::align_of::<ResponseResult__bindgen_ty_1>() - 8usize];
    ["Offset of field: ResponseResult__bindgen_ty_1::response"]
        [::std::mem::offset_of!(ResponseResult__bindgen_ty_1, response) - 0usize];
    ["Offset of field: ResponseResult__bindgen_ty_1::error"]
        [::std::mem::offset_of!(ResponseResult__bindgen_ty_1, error) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ResponseResult"][::std::mem::size_of::<ResponseResult>() - 32usize];
    ["Alignment of ResponseResult"][::std::mem::align_of::<ResponseResult>() - 8usize];
    ["Offset of field: ResponseResult::isError"]
        [::std::mem::offset_of!(ResponseResult, isError) - 0usize];
};
